#!/bin/bash

# Slackware build script for pgpool-II

# Copyright 2014, Luiz Pasqual <luiz@pasquall.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Do not source this script (since it contains exit() calls)

LOGFILE=/var/log/postgresql
PGPOOL=/usr/bin/pgpool
PIDFILE=postmaster.pid

# Return values (according to LSB):
# 0 - success
# 1 - generic or unspecified error
# 2 - invalid or excess argument(s)
# 3 - unimplemented feature (e.g. "reload")
# 4 - insufficient privilege
# 5 - program is not installed
# 6 - program is not configured
# 7 - program is not running

case "$1" in

    "start")
        echo "Starting pgpool-II"
    
        if [ $(pgrep -f $PGPOOL) ]; then

            echo "pgpool daemon already running"
            exit 1

        else 

            pgpool 
            exit 0

        fi  
    ;;

    "stop")
        echo "Shutting down pgpool-II..."
        pgpool stop
    ;;

    "force-stop")
        echo "Shutting down pgpool-II (fast)..."
        pgpool -m fast stop
    ;;
    
    "restart")
        echo "Restarting pgpool-II..."

        if [ $(pgrep -f $PGPOOL) ]; then

            pgpool stop; pgpool
            exit 1

        else 

            pgpool 
            exit 0

        fi  
    ;;

    "force-restart")
        echo "Restarting pgpool-II (fast)..."
        
        if [ $(pgrep -f $PGPOOL) ]; then

            pgpool -m fast stop; pgpool
            exit 1

        else 

            pgpool 
            exit 0

        fi  
    ;;

    "reload")
        echo "Reloading configuration for pgpool-II..."
        pgpool reload
    ;;

    "status")
        if [ $(pgrep -f $PGPOOL) ]; then
            echo "pgpool-II is running"

            exit 0
        else
            echo "pgpool-II is stopped"

            exit 0
        fi
    ;;

    *)
        echo "Usage: $0 {start|stop|force-stop|status|restart|force-restart|reload}"
        exit 1
    ;;
esac    
